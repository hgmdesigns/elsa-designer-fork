import{r as t,h as e}from"./p-94a66dfc.js";import{S as s}from"./p-b514879f.js";import{p as o}from"./p-884c4b95.js";import{T as r}from"./p-2865f18e.js";import{g as a}from"./p-c045a864.js";import"./p-c4caec5c.js";import"./p-25c0eb4f.js";import"./p-83f217d4.js";import"./p-4bedee02.js";const i=class{constructor(e){t(this,e)}async componentWillLoad(){this.currentValue=this.propertyModel.expressions[s.Json]||"[]"}onValueChanged(t){const e=t.map((t=>"string"==typeof t?t:"number"==typeof t||"boolean"==typeof t?t.toString():t.value));this.currentValue=JSON.stringify(e),this.propertyModel.expressions[s.Json]=this.currentValue}onDefaultSyntaxValueChanged(t){this.currentValue=t.detail}createKeyValueOptions(t){return null===t?t:t.map((t=>"string"==typeof t?{text:t,value:t}:t))}async componentWillRender(){this.items=await a(this.serverUrl,this.propertyDescriptor)}render(){const t=this.propertyDescriptor,s=this.propertyModel,r=t.name,a=r,i=r,p=o(this.currentValue),n=!!t.options&&t.options.length>0,l=this.createKeyValueOptions(this.items),d=n?e("elsa-input-tags-dropdown",{dropdownValues:l,values:p,fieldId:a,fieldName:i,onValueChanged:t=>this.onValueChanged(t.detail)}):e("elsa-input-tags",{values:p,fieldId:a,fieldName:i,onValueChanged:t=>this.onValueChanged(t.detail)});return e("elsa-property-editor",{propertyDescriptor:t,propertyModel:s,onDefaultSyntaxValueChanged:t=>this.onDefaultSyntaxValueChanged(t),"single-line":!0},d)}};r.injectProps(i,["serverUrl"]);export{i as elsa_multi_text_property}