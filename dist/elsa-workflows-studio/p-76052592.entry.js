import{r as e,h as t,H as s}from"./p-94a66dfc.js";import{a1 as r}from"./p-c4caec5c.js";import{W as i,S as o}from"./p-b514879f.js";import{c as a}from"./p-4bedee02.js";import{a as n,s as l,W as c}from"./p-665c8054.js";import"./p-25c0eb4f.js";import"./p-2484a96d.js";import"./p-884c4b95.js";import"./p-db67fce4.js";const p=class{constructor(t){e(this,t),n.initialize()}async getServerUrl(){return this.serverUrl}async workflowDefinitionIdChangedHandler(e){const t=e;let s={id:null,version:1,activities:[],connections:[],persistenceBehavior:i.WorkflowBurst,customAttributes:{data:{}},persistWorkflow:!1,isLatest:!1,isPublished:!1,loadWorkflowContext:!1,isSingleton:!1,saveWorkflowContext:!1,variables:{data:{}},activityType:null,type:null,subType:null,action:null,event:null,properties:{data:{}},propertyStorageProviders:{}};const r=a(this.serverUrl);if(t&&t.length>0)try{s=await r.workflowRegistryApi.get(t,{isLatest:!0})}catch(e){console.warn("The specified workflow blueprint does not exist. Creating a new one.")}this.updateModels(s)}async serverUrlChangedHandler(e){e&&e.length>0&&await this.loadActivityDescriptors()}async componentWillLoad(){await this.serverUrlChangedHandler(this.serverUrl),await this.workflowDefinitionIdChangedHandler(this.workflowDefinitionId)}componentDidLoad(){this.designer||(this.designer=this.el.querySelector("elsa-designer-tree"),this.designer.model=this.workflowModel)}async loadActivityDescriptors(){const e=a(this.serverUrl);l.activityDescriptors=await e.activitiesApi.list()}updateModels(e){this.workflowBlueprint=e,this.workflowModel=this.mapWorkflowModel(e)}mapWorkflowModel(e){return{activities:e.activities.filter((t=>t.parentId==e.id||!t.parentId)).map(this.mapActivityModel),connections:e.connections.map(this.mapConnectionModel),persistenceBehavior:e.persistenceBehavior}}mapActivityModel(e){const t=l.activityDescriptors.find((t=>t.type==e.type)),s=r.map(e.properties.data,((e,s)=>{const r=t.inputProperties.find((e=>e.name==s)).defaultSyntax||o.Literal,i={};return i[r]=e,{name:s,expressions:i,syntax:r}}));return{activityId:e.id,description:e.description,displayName:e.displayName||e.name||e.type,name:e.name,activityType:e.activityType,type:e.type,subType:e.subType,action:e.action,event:e.event,properties:s,outcomes:[...t.outcomes],persistWorkflow:e.persistWorkflow,saveWorkflowContext:e.saveWorkflowContext,loadWorkflowContext:e.loadWorkflowContext,propertyStorageProviders:e.propertyStorageProviders}}mapConnectionModel(e){return{sourceId:e.sourceActivityId,targetId:e.targetActivityId,outcome:e.outcome}}render(){return t(s,{class:"elsa-flex elsa-flex-col elsa-w-full elsa-relative",ref:e=>this.el=e},this.renderCanvas())}renderCanvas(){return t("div",{class:"elsa-flex-1 elsa-flex"},t("elsa-designer-tree",{model:this.workflowModel,class:"elsa-flex-1",ref:e=>this.designer=e,mode:c.Blueprint}))}static get watchers(){return{workflowDefinitionId:["workflowDefinitionIdChangedHandler"],serverUrl:["serverUrlChangedHandler"]}}};export{p as elsa_workflow_blueprint_viewer_screen}